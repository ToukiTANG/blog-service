<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.touki.blog.mapper.BlogMapper">
    <resultMap id="blogInfoResult" type="com.touki.blog.model.vo.BlogInfo">
        <association property="category" javaType="com.touki.blog.model.vo.CategoryInfo"/>
        <collection property="tags" ofType="com.touki.blog.model.vo.TagInfo" column="tagList"
                    select="tagsByBlogId"/>
    </resultMap>

    <resultMap id="BlogDetailResult" type="com.touki.blog.model.vo.BlogDetail">
        <association property="category" javaType="com.touki.blog.model.vo.CategoryInfo"/>
        <association property="content" javaType="com.touki.blog.model.vo.ContentInfo"/>
        <collection property="tags" javaType="com.touki.blog.model.vo.TagInfo"/>
    </resultMap>
    <select id="getNewBlogs" resultType="com.touki.blog.model.vo.NewBlog">
        select blog_id, title
        from blog
        order by update_time desc
        limit #{size}
    </select>
    <select id="getRandomBlogs" resultType="com.touki.blog.model.vo.RandomBlog">
        select blog_id, title, first_picture, create_time
        from blog
        order by rand()
        limit #{size}
    </select>
    <select id="getBlogPageByTagId" resultMap="blogInfoResult">
        select b.blog_id,
               b.title,
               b.first_picture,
               b.content_id,
               b.description,
               b.create_time,
               b.update_time,
               b.views,
               b.top,
               b.comment_enable,
               c.category_id,
               c.category_name
        from blog_tag bt
                 join blog b on b.blog_id = bt.blog_id
                 join category c on c.category_id = b.category_id
        where bt.tag_id = #{tagId}
        order by b.top desc, b.update_time desc
    </select>
    <select id="searchBlog" resultType="com.touki.blog.model.vo.SearchBlog">
        select b.blog_id, b.title, c.text contentText
        from blog b
        join content c on b.content_id = c.content_id
        <bind name="query" value="'%'+queryString+'%'"/>
        where b.title like #{query} or c.text like #{query}
    </select>
    <select id="archiveDate" resultType="java.lang.String">
        select date_format(create_time, '%Y-%m') yearMonth
        from blog
        group by yearMonth
        order by yearMonth desc
    </select>
    <select id="archiveDetail" resultType="com.touki.blog.model.vo.ArchiveBlog">
        select date_format(create_time, '%Y-%m') yearMonth, blog_id, title, day(create_time) day
        from blog
        order by create_time desc
    </select>
    <select id="archiveYearMonth" resultMap="blogInfoResult">
        select b.blog_id,
               b.title,
               b.first_picture,
               b.description,
               b.create_time,
               b.update_time,
               b.views,
               b.top,
               b.comment_enable,
               c.category_id,
               c.category_name,
               temp.tagList
        from blog b
                 join category c on b.category_id = c.category_id
                 join (select blog_id, group_concat(tag_id) tagList
                       from blog_tag
                       group by blog_id) temp on temp.blog_id = b.blog_id
        where date_format(b.create_time, '%Y-%m') = #{param2}
        order by b.top desc, b.create_time desc
    </select>
    <select id="getBlogInfos" resultMap="blogInfoResult">
        select b.blog_id,
        b.title,
        b.first_picture,
        b.description,
        b.create_time,
        b.update_time,
        b.views,
        b.top,
        b.comment_enable,
        c.category_id,
        c.category_name,
        temp.tagList
        from blog b
        join category c on b.category_id = c.category_id
        join (select blog_id, group_concat(tag_id) tagList
        from blog_tag
        group by blog_id) temp on temp.blog_id = b.blog_id
        <where>
            <if test="categoryId != null and category != ''">
                and c.category_id = #{categoryId}
            </if>
            <if test="tagId != null and tagId !=''">
                and b.blog_id in (select blog_id from blog_tag where tag_id = #{tagId})
            </if>
        </where>
        order by b.top desc, b.create_time desc
    </select>

    <select id="tagsByBlogId" resultType="com.touki.blog.model.entity.Tag">
        select tag_id, tag_name
        from tag
        where tag_id in
        <foreach collection="tagList.split(',')" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
    <select id="getBlogDetail" resultType="com.touki.blog.model.vo.BlogDetail">
        select b.blog_id,
               b.title,
               b.first_picture,
               b.content_id,
               b.description,
               b.create_time,
               b.update_time,
               b.views,
               b.top,
               b.comment_enable,
               b.category_id,
               c1.category_name,
               c2.text,
               t.tag_id,
               t.tag_name
        from blog b
                 join category c1 on b.category_id = c1.category_id
                 join content c2 on b.content_id = c2.content_id
                 join blog_tag bt on b.blog_id = bt.blog_id
                 join tag t on bt.tag_id = t.tag_id
        where b.blog_id = #{blogId}
    </select>
</mapper>